name: entlz-2-platform-subs

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      entlzprefix: 
        description: 'entlzprefix'
        required: true
        default: ''
      environment: 
        description: 'environment'
        required: true
        default: 'azureusgovernment'
      location: 
        description: 'location'
        required: true
        default: 'usgovvirginia'
      managementsubid:
        description: ''
        required: true
        default: ''
      identitysubid:
        description: ''
        required: true
        default: ''
      connectivitysubid:
        description: ''
        required: true
        default: ''
      securitysubid:
        description: ''
        required: true
        default: ''
      subownergroup: 
        description: ''
        required: true
        default: 'azure-platform-owners'
      offertype: 
        description: ''
        required: false
        default: 'MS-AZR-USGOV-0017P'
      enracctname: 
        description: ''
        required: false
        default: ''

  repository_dispatch:
    types: [entlz-1-platform-subs]

env:
  entlzprefix: ${{ github.event.inputs.entlzprefix }}
  environment: ${{ github.event.inputs.environment }}
  location: ${{ github.event.inputs.location }} 
  managementsubid: ${{ github.event.inputs.managementsubid }} 
  identitysubid: ${{ github.event.inputs.identitysubid }} 
  connectivitysubid: ${{ github.event.inputs.connectivitysubid }} 
  securitysubid: ${{ github.event.inputs.securitysubid }} 
  subownergroup: ${{ github.event.inputs.subownergroup }} 
  offertype: ${{ github.event.inputs.offertype }} 
  enracctname:  ${{ github.event.inputs.enracctname }} 


jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2
        - name: Branch name
          run: echo running on branch ${GITHUB_REF##*/}
        - name: Log in with Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZGOV_CREDS }}
            environment: ${{ env.environment }}
            enable-AzPSSession: false
        
        - name: Create Management Sub
          uses: azure/CLI@v1
          env:
            managementsubname: "${{ env.entlzprefix }}-management"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              managementuri=$(az cloud show --query endpoints.resourceManager --output tsv)
              if [[ -z "${{ env.managementsubid }}" ]];
              then
                az config set extension.use_dynamic_install=yes_without_prompt

                subownergroupid=$(az ad group list --display-name ${{ env.subownergroup }}  --query [].objectId -o tsv)

                # Check if Sub already exists
                if [[ -z `az account list --query "[?name=='${{ env.managementsubname }}'].name" --output tsv` ]];
                then
                  echo "Creating Management Subscription..."
                  # REST Call to Create Subscription
                  az rest --method post \
                  --url "${managementuri}providers/Microsoft.Billing/enrollmentAccounts/${{ env.enracctname }}/providers/Microsoft.Subscription/createSubscription?api-version=2019-10-01-preview" \
                  --headers "{\"content-type\":\"application/json\"}" \
                  --body "{\"displayName\": \"${{ env.managementsubname }}\", \"offerType\": \"${{ env.offertype }}\", \"owners\": [{\"objectId\": \"${subownergroupid}\"}]}"
                  sleep 60

                  echo "Assigning default tags..."
                  # Assign Default Tags to Subscription
                  NOW=$(date +"%m/%d/%Y_%I:%M:%S_%p")
                  subId=$(az account subscription list --query "[?displayName=='${{ env.managementsubname }}'].subscriptionId" --output tsv)
                  az tag create --resource-id /subscriptions/$subId --tags createdOn="$NOW" programType="int" programEnv="prod" programName="${{ env.entlzprefix }}"
                else
                  echo "Management subscription already exists...skipping"
                fi;
              else
                echo "Management subscription already exists...skipping"
                echo "Management subscription already exists...renaming"
                az rest --method post \
                --url "${managementuri}subscriptions/${{ env.managementsubid }}/providers/Microsoft.Subscription/rename?api-version=2019-10-01-preview" \
                --headers "{\"content-type\":\"application/json\"}" \
                --body "{   \"subscriptionName\": \"$managementsubname\"}"
              fi;

        - name: Create Identity Sub
          uses: azure/CLI@v1
          env:
            identitymg: "${{ env.entlzprefix }}-identity"
            identitysubname: "${{ env.entlzprefix }}-identity"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              managementuri=$(az cloud show --query endpoints.resourceManager --output tsv)
              if [[ -z "${{ env.identitysubid }}" ]];
              then
                az config set extension.use_dynamic_install=yes_without_prompt

                subownergroupid=$(az ad group list --display-name ${{ env.subownergroup }}  --query [].objectId -o tsv)

                # Check if Sub already exists
                if [[ -z `az account list --query "[?name=='${{ env.identitysubname }}'].name" --output tsv` ]];
                then
                  # REST Call to Create Subscription
                  az rest --method post \
                  --url "${managementuri}providers/Microsoft.Billing/enrollmentAccounts/${{ env.enracctname }}/providers/Microsoft.Subscription/createSubscription?api-version=2019-10-01-preview" \
                  --headers "{\"content-type\":\"application/json\"}" \
                  --body "{\"displayName\": \"${{ env.identitysubname }}\", \"offerType\": \"${{ env.offertype }}\", \"owners\": [{\"objectId\": \"${subownergroupid}\"}]}"
                  sleep 60

                  # Assign Default Tags to Subscription
                  NOW=$(date +"%m/%d/%Y_%I:%M:%S_%p")
                  subId=$(az account subscription list --query "[?displayName=='${{ env.identitysubname }}'].subscriptionId" --output tsv)
                  az tag create --resource-id /subscriptions/$subId --tags createdOn="$NOW" programType="int" programEnv="prod" programName="${{ env.entlzprefix }}"
                else
                  echo "Identity subscription already exists...skipping"
                fi;
              else
                echo "Identity subscription already exists...renaming"
                az rest --method post \
                --url "${managementuri}subscriptions/${{ env.identitysubid }}/providers/Microsoft.Subscription/rename?api-version=2019-10-01-preview" \
                --headers "{\"content-type\":\"application/json\"}" \
                --body "{   \"subscriptionName\": \"$identitysubname\"}"
              fi;

        - name: Create Connectivity Sub
          uses: azure/CLI@v1
          env:
            connectivitymg: "${{ env.entlzprefix }}-connectivity"
            connectivitysubname: "${{ env.entlzprefix }}-connectivity"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              managementuri=$(az cloud show --query endpoints.resourceManager --output tsv)
              if [[ -z "${{ env.connectivitysubid }}" ]];
              then
                az config set extension.use_dynamic_install=yes_without_prompt

                subownergroupid=$(az ad group list --display-name ${{ env.subownergroup }}  --query [].objectId -o tsv)

                # Check if Sub already exists
                if [[ -z `az account list --query "[?name=='${{ env.connectivitysubname }}'].name" --output tsv` ]];
                then
                  # REST Call to Create Subscription
                  az rest --method post \
                  --url "${managementuri}providers/Microsoft.Billing/enrollmentAccounts/${{ env.enracctname }}/providers/Microsoft.Subscription/createSubscription?api-version=2019-10-01-preview" \
                  --headers "{\"content-type\":\"application/json\"}" \
                  --body "{\"displayName\": \"${{ env.connectivitysubname }}\", \"offerType\": \"${{ env.offertype }}\", \"owners\": [{\"objectId\": \"${subownergroupid}\"}]}"
                  sleep 60

                  # Assign Default Tags to Subscription
                  NOW=$(date +"%m/%d/%Y_%I:%M:%S_%p")
                  subId=$(az account subscription list --query "[?displayName=='${{ env.connectivitysubname }}'].subscriptionId" --output tsv)
                  az tag create --resource-id /subscriptions/$subId --tags createdOn="$NOW" programType="int" programEnv="prod" programName="${{ env.entlzprefix }}"
                else
                  echo "Connectivity subscription already exists...skipping"
                fi;
              else
                echo "Conenctivity subscription already exists...renaming"
                az rest --method post \
                --url "${managementuri}subscriptions/${{ env.connectivitysubid }}/providers/Microsoft.Subscription/rename?api-version=2019-10-01-preview" \
                --headers "{\"content-type\":\"application/json\"}" \
                --body "{   \"subscriptionName\": \"$connectivitysubname\"}"
              fi;

        - name: Create Security Sub
          uses: azure/CLI@v1
          env:
            securitymg: "${{ env.entlzprefix }}-security"
            securitysubname: "${{ env.entlzprefix }}-security"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              managementuri=$(az cloud show --query endpoints.resourceManager --output tsv)
              if [[ -z "${{ env.securitysubid }}" ]];
              then
                
                # Check if Sub already exists
                if [[ -z `az account list --query "[?name=='${{ env.securitysubname }}'].name" --output tsv` ]];
                then
                  az config set extension.use_dynamic_install=yes_without_prompt

                  subownergroupid=$(az ad group list --display-name ${{ env.subownergroup }}  --query [].objectId -o tsv)

                  # REST Call to Create Subscription
                  az rest --method post \
                  --url "${managementuri}providers/Microsoft.Billing/enrollmentAccounts/${{ env.enracctname }}/providers/Microsoft.Subscription/createSubscription?api-version=2019-10-01-preview" \
                  --headers "{\"content-type\":\"application/json\"}" \
                  --body "{\"displayName\": \"${{ env.securitysubname }}\", \"offerType\": \"${{ env.offertype }}\", \"owners\": [{\"objectId\": \"${subownergroupid}\"}]}"
                  sleep 60

                  # Assign Default Tags to Subscription
                  NOW=$(date +"%m/%d/%Y_%I:%M:%S_%p")
                  subId=$(az account subscription list --query "[?displayName=='${{ env.securitysubname }}'].subscriptionId" --output tsv)
                  az tag create --resource-id /subscriptions/$subId --tags createdOn="$NOW" programType="int" programEnv="prod" programName="${{ env.entlzprefix }}"
                else
                  echo "Security subscription already exists...skipping"
                fi;
              else
                echo "Security subscription already exists...renaming"
                az rest --method post \
                --url "${managementuri}subscriptions/${{ env.securitysubid }}/providers/Microsoft.Subscription/rename?api-version=2019-10-01-preview" \
                --headers "{\"content-type\":\"application/json\"}" \
                --body "{   \"subscriptionName\": \"$securitysubname\"}"
              fi;

        - name: Log in to Azure Again
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZGOV_CREDS }}
            environment: ${{ env.environment }}
            enable-AzPSSession: false

        - name: Move Management Subscription to Management Group
          uses: azure/CLI@v1
          env:
            managementmg: "${{ env.entlzprefix }}-management"
            managementsubname: "${{ env.entlzprefix }}-management"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              if [[ -z "${{ env.managementsubid }}" ]];
              then
                subId=$(az account subscription list --query "[?displayName=='${{ env.managementsubname }}'].subscriptionId" --output tsv)
                az account management-group subscription add --name "${{ env.managementmg }}" --subscription $subId
              else
                az account management-group subscription add --name "${{ env.managementmg }}" \
                  --subscription ${{ env.managementsubid }}
              fi;
        
        - name: Move Identity Subscription to Management Group
          uses: azure/CLI@v1
          env:
            identitymg: "${{ env.entlzprefix }}-identity"
            identitysubname: "${{ env.entlzprefix }}-identity"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              if [[ -z "${{ env.identitysubid }}" ]];
              then
                subId=$(az account subscription list --query "[?displayName=='${{ env.identitysubname }}'].subscriptionId" --output tsv)
                az account management-group subscription add --name "${{ env.identitymg }}" \
                  --subscription $subId
              else
                az account management-group subscription add --name "${{ env.identitymg }}" \
                  --subscription ${{ env.identitysubid }}
              fi;

        - name: Move connectivity Subscription to Management Group
          uses: azure/CLI@v1
          env:
            connectivitymg: "${{ env.entlzprefix }}-connectivity"
            connectivitysubname: "${{ env.entlzprefix }}-connectivity"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              if [[ -z "${{ env.connectivitysubid }}" ]];
              then
                subId=$(az account subscription list --query "[?displayName=='${{ env.connectivitysubname }}'].subscriptionId" --output tsv)
                az account management-group subscription add --name "${{ env.connectivitymg }}" \
                  --subscription $subId
              else
                az account management-group subscription add --name "${{ env.connectivitymg }}" \
                  --subscription ${{ env.connectivitysubid }}
              fi;

        - name: Move security Subscription to Management Group
          uses: azure/CLI@v1
          env:
            securitymg: "${{ env.entlzprefix }}-security"
            securitysubname: "${{ env.entlzprefix }}-security"
          with:
            azcliversion: 2.21.0
            inlineScript: |
              if [[ -z "${{ env.securitysubid }}" ]];
              then
                subId=$(az account subscription list --query "[?displayName=='${{ env.securitysubname }}'].subscriptionId" --output tsv)
                az account management-group subscription add --name "${{ env.securitymg }}" \
                  --subscription $subId
              else
                az account management-group subscription add --name "${{ env.securitymg }}" \
                  --subscription ${{ env.securitysubid }}
              fi;