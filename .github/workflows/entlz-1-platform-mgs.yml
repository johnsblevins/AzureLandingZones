name: entlz-1-platform-mgs

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      entlzprefix: 
        description: 'entlzprefix'
        required: true
        default: ''
      environment: 
        description: 'environment'
        required: true
        default: 'azureusgovernment'
      location: 
        description: 'location'
        required: true
        default: 'usgovvirginia'    
      githubsecret:
        description: 'Github Secret Name with Azure Credentials'
        required: true
        default: 'AZGOV_CREDS'

  repository_dispatch:
    types: [entlz-1-platform-mgs]

#  push:
#    branches:
#      - dev
#    paths:
#      - 'templates/entlz/platform-mgs/main.bicep'
#      - '.github/workflows/entlz-1-platform-mgs.yml'

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        - name: Set Variables
          id: setvariables         
          run: |
            shopt -s nocasematch
            echo ${GITHUB_EVENT_NAME} 
            if [ ${GITHUB_EVENT_NAME} == 'workflow_dispatch' ];
            then
              echo "::set-output name=ref::${GITHUB_REF##*/}"
              echo "::set-output name=entlzprefix::${{ github.event.inputs.entlzprefix }}"
              echo "::set-output name=environment::${{ github.event.inputs.environment }}"
              echo "::set-output name=location::${{ github.event.inputs.location }}"
              echo "::set-output name=githubsecret::${{ github.event.inputs.githubsecret }}"
            elif [ ${GITHUB_EVENT_NAME} == 'repository_dispatch' ];
            then
              echo "::set-output name=ref::${{ github.event.client_payload.ref }}"
              echo "::set-output name=entlzprefix::${{ github.event.client_payload.entlzprefix }}"
              echo "::set-output name=environment::${{ github.event.client_payload.environment }}"
              echo "::set-output name=location::${{ github.event.client_payload.location }}"
              echo "::set-output name=githubsecret::${{ github.event.client_payload.githubsecret }}"
            else
              echo "Invalid Event Trigger ${GITHUB_EVENT_NAME} unable to set variables."
            fi;
        - name: Echo Variables
          run: |
            echo ${{ steps.setvariables.outputs.ref }}
            echo ${{ steps.setvariables.outputs.entlzprefix }}
            echo ${{ steps.setvariables.outputs.environment }}
            echo ${{ steps.setvariables.outputs.location }}
            echo ${{ steps.setvariables.outputs.githubsecret }}
        - uses: actions/checkout@v2        
          with:
            ref: ${{ steps.setvariables.outputs.ref }}        
        - name: Log in with Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets[steps.setvariables.outputs.githubsecret] }}
            environment: ${{ steps.setvariables.outputs.environment }}
            enable-AzPSSession: false
        - name: Deploy Management Groups
          uses: azure/CLI@v1
          with:
            azcliversion: 2.21.0
            inlineScript: |
                # Deploy Management Groups using template
                deploymentguid=`uuidgen`
                az deployment tenant create \
                  --name "${{ steps.setvariables.outputs.entlzprefix }}-managementgroups-${{ steps.setvariables.outputs.location }}-$deploymentguid" \
                  --location ${{ steps.setvariables.outputs.location }} \
                  --template-file templates/entlz/platform-mgs/main.bicep \
                  --parameters entlzprefix=${{ steps.setvariables.outputs.entlzprefix }} deploymentguid=$deploymentguid
        
        - name: Configure Management Group Hierarchy Settings
          uses: azure/CLI@v1
          with:
            azcliversion: 2.21.0
            inlineScript: |
                # Configure Management Group Hierarchy Settings

                TenantRootMG=$(az account management-group list --query "[0].name" --output tsv)
                resourceManagerURI=$(az cloud show --query 'endpoints.resourceManager' -o tsv)                
                az rest \
                  --method put \
                  --headers "{\"Content-Type\":\"application/json\"}" \
                  --uri "${resourceManagerURI}providers/Microsoft.Management/managementGroups/$TenantRootMG/settings/default?api-version=2020-05-01" \
                  --body "{\"properties\": {\"defaultManagementGroup\": \"/providers/Microsoft.Management/managementGroups/${{ steps.setvariables.outputs.entlzprefix }}-onboarding\",\"requireAuthorizationForGroupCreation\": \"true\"}}" 